;--------------------------------------------------------
; File Created by SDCC : free open source ANSI-C Compiler
; Version 3.0.1 #6227 (Oct 24 2011) (CYGWIN)
; This file was generated Sun Nov 27 22:30:15 2011
;--------------------------------------------------------
;--------------------------------------------------------
; global & static initialisations
;--------------------------------------------------------

	LOAD	sF, 3f
	JUMP	__sdcc_program_startup
;--------------------------------------------------------
; Home
;--------------------------------------------------------
__sdcc_program_startup:
	CALL	_main
;	return from main will lock up
__sdcc_loop:
	JUMP	__sdcc_loop
;--------------------------------------------------------
; code
;--------------------------------------------------------
	;	../../device/include/pblaze/delay.h:51: void delay(unsigned char time)
_delay:
	LOAD	s0, sB
	;	../../device/include/pblaze/delay.h:53: volatile unsigned char i = time;
	LOAD	s1, s0
_L00101:
	;	../../device/include/pblaze/delay.h:54: for(; i > 0; i--)
	LOAD	s0, s1
	COMPARE	s0, 00
	JUMP	NZ, _LC00135
	JUMP	_L00107
_LC00135:
	LOAD	s0, 01
	JUMP	_L00108
_L00107:
	LOAD	s0, 00
_L00108:
	COMPARE	s0, 00
	JUMP	NZ, _LC00136
	JUMP	_L00105
_LC00136:
	;	../../device/include/pblaze/delay.h:72: __endasm;             
	       LOAD s2, 00
	       ADD s2, 01
	       LOAD s1, 00
	rpt22:
	       ADD s1, 01
	       LOAD s0, 00
	rpt11:
	       ADD s0, 01
	       JUMP NZ, rpt11
	       COMPARE s1, 00
	       JUMP NZ, rpt22
	;	../../device/include/pblaze/delay.h:54: for(; i > 0; i--)
	SUB	s1, 01
	JUMP	_L00101
_L00105:
	RETURN
	;	../../device/include/pblaze/port.h:16: void __port_write(unsigned char port, unsigned char arg) 
___port_write:
	LOAD	s0, sB
	LOAD	s1, sC
	;	../../device/include/pblaze/port.h:20: p = port;
	LOAD	s2, s0
	;	../../device/include/pblaze/port.h:21: a = arg;
	LOAD	s0, s1
	;	../../device/include/pblaze/port.h:24: __endasm;
	     OUTPUT _a, _p
	;	../../device/include/pblaze/port.h:25: delay(MIN_PAUSE);
	STORE	s0, (sF)
	SUB	sF, 01
	STORE	s2, (sF)
	SUB	sF, 01
	LOAD	sB, 0a
	CALL	_delay
	ADD	sF, 01
	FETCH	s2, (sF)
	ADD	sF, 01
	FETCH	s0, (sF)
	RETURN
	;	../../device/include/pblaze/port.h:28: unsigned char __port_read(volatile unsigned char port) 
___port_read:
	LOAD	s0, sB
	;	../../device/include/pblaze/port.h:30: volatile unsigned char d = 0;
	LOAD	s1, 00
	;	../../device/include/pblaze/port.h:31: volatile unsigned char p = port;
	LOAD	s2, s0
	LOAD	s3, s2
	;	../../device/include/pblaze/port.h:34: __endasm;
	     INPUT _d, _p
	;	../../device/include/pblaze/port.h:35: delay(MIN_PAUSE);
	STORE	s0, (sF)
	SUB	sF, 01
	STORE	s1, (sF)
	SUB	sF, 01
	STORE	s3, (sF)
	SUB	sF, 01
	LOAD	sB, 0a
	CALL	_delay
	ADD	sF, 01
	FETCH	s3, (sF)
	ADD	sF, 01
	FETCH	s1, (sF)
	ADD	sF, 01
	FETCH	s0, (sF)
	;	../../device/include/pblaze/port.h:36: return d;
	LOAD	s2, s1
	LOAD	sB, s2
	RETURN
	;	inctest7.c:4: void main()
_main:
	;	inctest7.c:6: volatile unsigned char c = 1;
	LOAD	s0, 01
	;	inctest7.c:7: volatile unsigned char d = 1;
	LOAD	s1, 01
	;	inctest7.c:8: volatile unsigned char e = 15;
	LOAD	s2, 0f
	;	inctest7.c:10: c <<= 4;
	LOAD	s3, s0
	SL0	s3
	SL0	s3
	SL0	s3
	SL0	s3
	LOAD	s0, s3
	;	inctest7.c:12: c >>= 3;
	LOAD	s3, s0
	SR0	s3
	SR0	s3
	SR0	s3
	LOAD	s0, s3
	;	inctest7.c:14: c |= c;
	LOAD	s3, s0
	LOAD	s4, s0
	OR	s4, s3
	LOAD	s0, s4
	;	inctest7.c:16: c |= d + 1;
	LOAD	s3, s1
	ADD	s3, 01
	LOAD	s4, s0
	OR	s4, s3
	LOAD	s0, s4
	;	inctest7.c:18: c = c & d;
	LOAD	s3, s0
	LOAD	s4, s1
	AND	s3, s4
	LOAD	s0, s3
	;	inctest7.c:20: d = ~e;
	LOAD	s3, s2
	XOR	s3, ff
	LOAD	s1, s3
	;	inctest7.c:22: e = c ^ d;
	LOAD	s3, s1
	LOAD	s4, s0
	XOR	s4, s3
	LOAD	s2, s4
	;	inctest7.c:24: c = !c && d || e;
	LOAD	s3, s0
	LOAD	s4, 00
	COMPARE	s3, 00
	JUMP	NZ, _LC00137
	LOAD	s4, 01
_LC00137:
	COMPARE	s4, 00
	JUMP	NZ, _LC00138
	JUMP	_L00123
_LC00138:
	LOAD	s3, s1
	COMPARE	s3, 00
	JUMP	Z, _LC00139
	JUMP	_L00124
_LC00139:
_L00123:
	LOAD	s3, 00
	JUMP	_L00125
_L00124:
	LOAD	s3, 01
_L00125:
	COMPARE	s3, 00
	JUMP	Z, _LC00140
	JUMP	_L00121
_LC00140:
	LOAD	s3, s2
	COMPARE	s3, 00
	JUMP	Z, _LC00141
	JUMP	_L00121
_LC00141:
	LOAD	s3, 00
	JUMP	_L00122
_L00121:
	LOAD	s3, 01
_L00122:
	LOAD	s0, s3
	;	inctest7.c:25: c = c || e;
	LOAD	s3, s0
	COMPARE	s3, 00
	JUMP	Z, _LC00142
	JUMP	_L00127
_LC00142:
	LOAD	s3, s2
	COMPARE	s3, 00
	JUMP	Z, _LC00143
	JUMP	_L00127
_LC00143:
	LOAD	s3, 00
	JUMP	_L00128
_L00127:
	LOAD	s3, 01
_L00128:
	LOAD	s0, s3
	;	inctest7.c:27: if (!c)
	LOAD	s3, s0
	COMPARE	s3, 00
	JUMP	Z, _LC00144
	JUMP	_L00118
_LC00144:
	;	inctest7.c:29: c = -e;
	LOAD	s3, s2
	LOAD	s4, s3
	XOR	s4, ff
	ADD	s4, 01
	LOAD	s0, s4
_L00118:
	RETURN
;--------------------------------------------------------
; interrupt vector 
;--------------------------------------------------------
